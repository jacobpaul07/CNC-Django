# __Author__      = " Jacob Paul "
# Description     = " Docker Compose to run the CNC-API Django project with Mongo and Redis Containers in same network "

version: '3'

services:

  backend:
    image: "siqsessedge/cnc-api:CNC"
    ports:
      - "8000:8000"
    depends_on: 
      - redis
      - mongo
    networks:
      cnc-network:
        ipv4_address: 174.22.0.2
    restart: always

  redis:
    image: "redis:5"
    ports:
      - "6379:6379"
    networks:
      cnc-network:
        ipv4_address: 174.22.0.3
    restart: always

  mongo:
    image: "mongo:latest"
    ports:
      - "27016:27017"
    volumes:
      - './data:/data/db'
    networks:
      cnc-network:
        ipv4_address: 174.22.0.4
    restart: always

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      cnc-network:
        ipv4_address: 174.22.0.5
    restart: always

  kafka:
      image: 'bitnami/kafka:latest'
      ports:
        - '9092:9092'
      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://174.22.0.6:9092
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
      depends_on:
        - zookeeper
      networks:
        cnc-network:
          ipv4_address: 174.22.0.6
      restart: always

networks:
  cnc-network:
    ipam:
      config:
        - subnet: 174.22.0.0/16

